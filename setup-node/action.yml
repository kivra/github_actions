name: 'Setup node'
description: 'Setup node and install dependencies from cache'

inputs:
  COMMAND:
    default: 'npm ci --ignore-scripts'
    description: 'Install command to run'
    required: false
  NPM_AUTH_TOKEN:
    description: 'NPM token'
    required: true
  NODE_VERSION:
    description: 'Node version to use'
    required: true
  PROJECT_ROOT:
    default: '.'
    description: 'Base path to npm project'
    required: false
  CACHE_CHILD_NODE_MODULES:
    default: "false"
    description: 'When true <PROJECT_ROOT>/**/node_modules is added to the cache. Note that this does not affect the cache key.'
    required: false
  CACHE_KEY:
    default: "0"
    description: 'This key will be used in the actual cache key and can be used to invalidate the cache or distinguish between multiple caches in the same repo.'
    required: false
  PATHS:
    default: ""
    description: 'Additional paths to cache as \n separated string'
    required: false

outputs:
  KEY:
    description: 'The resulting cache key, can be used for restoring the cache later on wihtout providing all the arguments'
    value: ${{ steps.key.outputs.key }}
  PATH:
    description: 'The cached paths, can be used for restoring the cache later on wihtout providing all the arguments'
    value: ${{ steps.path.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: ‚öôÔ∏è Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.NODE_VERSION }}
        registry-url: 'https://npm.pkg.github.com'
    - name: Generate key
      id: key
      shell: bash
      run: | 
        echo "::set-output name=key::npm-v${{ inputs.CACHE_KEY }}-${{ runner.os }}-${{ inputs.NODE_VERSION }}-${{ hashFiles(format('{0}/package-lock.json', inputs.PROJECT_ROOT)) }}-children-${{ inputs.CACHE_CHILD_NODE_MODULES}}"
    - name: Set paths
      id: path
      shell: bash
      run: | 
        echo "::set-output name=path::${{ inputs.PROJECT_ROOT }}/.npm\n${{ inputs.PROJECT_ROOT }}/node_modules\n${{ inputs.CACHE_CHILD_NODE_MODULES == 'true' && format('{0}/**/node_modules', inputs.PROJECT_ROOT) || '' }}\n${{ inputs.PATHS }}"
    - name: ‚ôªÔ∏è NPM Cache
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: ${{ steps.path.outputs.path }}
        key: ${{ steps.key.outputs.key }}
    # Skip post-install scripts here, as a malicious may otherwise steal NPM_AUTH_TOKEN
    - name: üìÄ Install
      id: result
      run: |
        if [[ "${{ steps.npm-cache.outputs.cache-hit }}" == "true" ]]
        then
          echo "Cache hit - skipping dependency installation"
        else
          echo "No cache hit - installing with command: ${{ inputs.COMMAND }}"
          cd ${{ inputs.PROJECT_ROOT }}
          ${{ inputs.COMMAND }}
        fi
      shell: bash
      env:
        CI: "true"
        NODE_AUTH_TOKEN: ${{ inputs.NPM_AUTH_TOKEN }}
